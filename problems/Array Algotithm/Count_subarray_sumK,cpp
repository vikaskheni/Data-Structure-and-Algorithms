#include <bits/stdc++.h>
using namespace std;
// problem for the number of subarray with XOR sum K;
class Solution
{
public:
    int maxLen(vector<int> &arr, int n)
    {
        // Your code here
        int ar = 0;
        map<int, int> map1;
        map1[ar]++;
        int count = 0;
        int k = 0;

        for (int i = 0; i < n; i++)
        {
            ar = ar ^ arr[i];
            int rem = ar ^ k;
            count += map1[rem];

            map1[ar]++;
        }
        return count;
    }
};

// Number of subarray with sum k

class Solution
{
public:
    int subarraySum(vector<int> &nums, int k)
    {
        int count = 0;
        int sum = 0;
        map<int, int> map1;
        map1[0] = 1;
        for (int i = 0; i < nums.size(); i++)
        {
            sum += nums[i];
            int remain = sum - k;
            count += map1[remain];
            map1[sum] += 1;
        }
        return count;
    }
};
